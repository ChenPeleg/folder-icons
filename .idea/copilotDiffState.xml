<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/file-icons.md">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/file-icons.md" />
              <option name="originalContent" value="# Find file icons that could be used with ts or tsx extention&#10;&#10;# steps:&#10;1. look at the file :&#10;`file-icons/file-icons.js` - done&#10;&#10;2. Search for icons that could be used for ts or tsx files - done&#10;3. list in this md file the relevant icons and their  icon type, and there regex - done&#10;4. add each of this files to the `file-icons` folder in this repo, the content of the file could just be a comment with&#10;`// icon: &lt;icon-type&gt;`  &#10;5. look in the `file-icons` folder. if two files have the same icon type put onlt the first one. otherwise delete the file&#10;&#10;# found:&#10;&#10;## Primary TypeScript Icons&#10;&#10;### 1. ts-icon&#10;- **Colors**: [&quot;medium-blue&quot;,&quot;medium-blue&quot;]&#10;- **Regex**: `/\.[cm]?ts$/i`&#10;- **Description**: Main TypeScript icon for .ts, .cts, and .mts files&#10;- **Language Scope**: `/\.ts$/i`&#10;- **Language Names**: `/^(?:ts|Type[-\s]*Script)$/i`&#10;- **Interpreter**: `/\b(?:deno|tsc|ts-node)$/`&#10;&#10;### 2. tsx-icon&#10;- **Colors**: [&quot;light-blue&quot;,&quot;light-blue&quot;]&#10;- **Regex**: `/\.tsx$/i`&#10;- **Description**: TypeScript React icon for .tsx files&#10;- **Language Scope**: `/(?:^|\.)(?:TSX|TypeScript[-_ ]?React)(?:$|\.)/i`&#10;- **Language Names**: `/^TSX$/i`&#10;&#10;## Config/Settings Icons for TypeScript&#10;&#10;### 3. config-ts-icon (tsconfig)&#10;- **Colors**: [&quot;medium-blue&quot;,&quot;dark-blue&quot;]&#10;- **Regex**: `/^tsconfig(?:\..+)?\.json$/i`&#10;- **Priority**: 1.5&#10;- **Description**: TypeScript configuration files (tsconfig.json, tsconfig.base.json, etc.)&#10;&#10;### 4. config-ts-icon (tslint)&#10;- **Colors**: [&quot;medium-purple&quot;,&quot;dark-purple&quot;]&#10;- **Regex**: `/^tslint\.json$/i`&#10;- **Priority**: 1.5&#10;- **Description**: TSLint configuration file&#10;&#10;## Test Files Icons for TypeScript&#10;&#10;### 5. test-ts-icon (test .ts)&#10;- **Colors**: [&quot;medium-blue&quot;,&quot;dark-blue&quot;]&#10;- **Regex**: `/(?:^test[._-].*|[._-](?:spec|test)s?)\.ts$/i`&#10;- **Priority**: 1.5&#10;- **Description**: TypeScript test files (test.ts, spec.ts, etc.)&#10;&#10;### 6. test-ts-icon (test .tsx)&#10;- **Colors**: [&quot;light-blue&quot;,&quot;medium-blue&quot;]&#10;- **Regex**: `/(?:^test[._-].*|[._-](?:spec|test)s?)\.tsx$/i`&#10;- **Priority**: 1.5&#10;- **Description**: TypeScript React test files (test.tsx, spec.tsx, etc.)&#10;&#10;### 7. test-ts-icon (path-based .ts)&#10;- **Colors**: [&quot;medium-blue&quot;,&quot;dark-blue&quot;]&#10;- **Regex**: `/([\\\/])(spec|test)s?\1(?:\d+[-.])+(?!-)[^.\\\/]+\.ts$/i`&#10;- **Priority**: 1.5&#10;- **Path Sensitive**: true&#10;- **Description**: TypeScript test files in spec/test folders&#10;&#10;### 8. test-ts-icon (path-based .tsx)&#10;- **Colors**: [&quot;light-blue&quot;,&quot;medium-blue&quot;]&#10;- **Regex**: `/([\\\/])(spec|test)s?\1(?:\d+[-.])+(?!-)[^.\\\/]+\.tsx$/i`&#10;- **Priority**: 1.5&#10;- **Path Sensitive**: true&#10;- **Description**: TypeScript React test files in spec/test folders&#10;&#10;## Build Tool Icons (TypeScript variants)&#10;&#10;### 9. grunt-icon (TypeScript)&#10;- **Colors**: [&quot;medium-blue&quot;,&quot;medium-blue&quot;]&#10;- **Regex**: `/^gruntfile.*\.tsx?$/i`&#10;- **Priority**: 2&#10;- **Description**: Grunt configuration files in TypeScript&#10;&#10;### 10. gulp-icon (TypeScript)&#10;- **Colors**: [&quot;medium-blue&quot;,&quot;medium-blue&quot;]&#10;- **Regex**: `/^gulpfile.*\.tsx?$/i`&#10;- **Priority**: 2&#10;- **Description**: Gulp configuration files in TypeScript&#10;&#10;### 11. karma-icon (TypeScript)&#10;- **Colors**: [&quot;medium-cyan&quot;,&quot;medium-cyan&quot;]&#10;- **Regex**: `/^karma\.conf(?:ig)?\.[cm]?js$|^karma\.conf(?:ig)?\.ts$/i`&#10;- **Priority**: 2&#10;- **Description**: Karma test runner configuration in TypeScript&#10;&#10;## Storybook Icons (TypeScript variants)&#10;&#10;### 12. storybook-icon (TypeScript)&#10;- **Colors**: [&quot;medium-blue&quot;,&quot;medium-blue&quot;]&#10;- **Regex**: `/\.(?:story|stories)\.tsx?$/i`&#10;- **Priority**: 2&#10;- **Description**: Storybook story files in TypeScript/TSX&#10;&#10;## Styled Components Icons (TypeScript variants)&#10;&#10;### 13. nailpolish-icon (.sc.ts)&#10;- **Colors**: [&quot;medium-blue&quot;,&quot;medium-blue&quot;]&#10;- **Regex**: `/\.sc\.ts$/i`&#10;- **Priority**: 2&#10;- **Description**: Styled components in TypeScript&#10;&#10;### 14. nailpolish-icon (.sc.tsx)&#10;- **Colors**: [&quot;light-blue&quot;,&quot;light-blue&quot;]&#10;- **Regex**: `/\.sc\.tsx$/i`&#10;- **Priority**: 2&#10;- **Description**: Styled components in TypeScript React&#10;&#10;## Other Config Files&#10;&#10;### 15. snowpack-icon (TypeScript config)&#10;- **Colors**: [&quot;dark-blue&quot;,&quot;dark-blue&quot;]&#10;- **Regex**: `/^snowpack\.config\.(?:[cm]?js|ts|json)$/i`&#10;- **Priority**: 2&#10;- **Description**: Snowpack configuration in TypeScript&#10;&#10;### 16. stitches-icon (TypeScript config)&#10;- **Colors**: [&quot;medium-purple&quot;,&quot;medium-purple&quot;]&#10;- **Regex**: `/^\.?stitches\.config\.(?:[cm]?js|ts)$/i`&#10;- **Priority**: 2&#10;- **Description**: Stitches CSS-in-JS configuration in TypeScript&#10;&#10;### 17. quasar-icon (TypeScript config)&#10;- **Colors**: [&quot;medium-blue&quot;,&quot;medium-blue&quot;]&#10;- **Regex**: `/^quasar\.conf(?:ig)?\.[cm]?[jt]s$/i`&#10;- **Priority**: 2&#10;- **Description**: Quasar framework configuration in TypeScript&#10;&#10;### 18. gridsome-icon (TypeScript config)&#10;- **Colors**: [&quot;medium-cyan&quot;,&quot;medium-cyan&quot;]&#10;- **Regex**: `/\bgridsome\.(?:config|client|server)\.[jt]s$/i`&#10;- **Priority**: 2&#10;- **Description**: Gridsome configuration files in TypeScript&#10;" />
              <option name="updatedContent" value="# Find file icons that could be used with ts or tsx extention&#10;&#10;# steps:&#10;1. look at the file :&#10;`file-icons/file-icons.js` - done&#10;&#10;2. Search for icons that could be used for ts or tsx files - done&#10;3. list in this md file the relevant icons and their  icon type, and there regex - done&#10;4. add each of this files to the `file-icons` folder in this repo, the content of the file could just be a comment with&#10;`// icon: &lt;icon-type&gt;`  &#10;5. look in the `file-icons` folder. if two files have the same icon type put onlt the first one. otherwise delete the file&#10;&#10;# found:&#10;&#10;## Primary TypeScript Icons&#10;&#10;### 1. ts-icon&#10;- **Colors**: [&quot;medium-blue&quot;,&quot;medium-blue&quot;]&#10;- **Regex**: `/\.[cm]?ts$/i`&#10;- **Description**: Main TypeScript icon for .ts, .cts, and .mts files&#10;- **Language Scope**: `/\.ts$/i`&#10;- **Language Names**: `/^(?:ts|Type[-\s]*Script)$/i`&#10;- **Interpreter**: `/\b(?:deno|tsc|ts-node)$/`&#10;&#10;### 2. tsx-icon&#10;- **Colors**: [&quot;light-blue&quot;,&quot;light-blue&quot;]&#10;- **Regex**: `/\.tsx$/i`&#10;- **Description**: TypeScript React icon for .tsx files&#10;- **Language Scope**: `/(?:^|\.)(?:TSX|TypeScript[-_ ]?React)(?:$|\.)/i`&#10;- **Language Names**: `/^TSX$/i`&#10;&#10;## Config/Settings Icons for TypeScript&#10;&#10;### 3. config-ts-icon (tsconfig)&#10;- **Colors**: [&quot;medium-blue&quot;,&quot;dark-blue&quot;]&#10;- **Regex**: `/^tsconfig(?:\..+)?\.json$/i`&#10;- **Priority**: 1.5&#10;- **Description**: TypeScript configuration files (tsconfig.json, tsconfig.base.json, etc.)&#10;&#10;### 4. config-ts-icon (tslint)&#10;- **Colors**: [&quot;medium-purple&quot;,&quot;dark-purple&quot;]&#10;- **Regex**: `/^tslint\.json$/i`&#10;- **Priority**: 1.5&#10;- **Description**: TSLint configuration file&#10;&#10;## Test Files Icons for TypeScript&#10;&#10;### 5. test-ts-icon (test .ts)&#10;- **Colors**: [&quot;medium-blue&quot;,&quot;dark-blue&quot;]&#10;- **Regex**: `/(?:^test[._-].*|[._-](?:spec|test)s?)\.ts$/i`&#10;- **Priority**: 1.5&#10;- **Description**: TypeScript test files (test.ts, spec.ts, etc.)&#10;&#10;### 6. test-ts-icon (test .tsx)&#10;- **Colors**: [&quot;light-blue&quot;,&quot;medium-blue&quot;]&#10;- **Regex**: `/(?:^test[._-].*|[._-](?:spec|test)s?)\.tsx$/i`&#10;- **Priority**: 1.5&#10;- **Description**: TypeScript React test files (test.tsx, spec.tsx, etc.)&#10;&#10;### 7. test-ts-icon (path-based .ts)&#10;- **Colors**: [&quot;medium-blue&quot;,&quot;dark-blue&quot;]&#10;- **Regex**: `/([\\\/])(spec|test)s?\1(?:\d+[-.])+(?!-)[^.\\\/]+\.ts$/i`&#10;- **Priority**: 1.5&#10;- **Path Sensitive**: true&#10;- **Description**: TypeScript test files in spec/test folders&#10;&#10;### 8. test-ts-icon (path-based .tsx)&#10;- **Colors**: [&quot;light-blue&quot;,&quot;medium-blue&quot;]&#10;- **Regex**: `/([\\\/])(spec|test)s?\1(?:\d+[-.])+(?!-)[^.\\\/]+\.tsx$/i`&#10;- **Priority**: 1.5&#10;- **Path Sensitive**: true&#10;- **Description**: TypeScript React test files in spec/test folders&#10;&#10;## Build Tool Icons (TypeScript variants)&#10;&#10;### 9. brunch-icon (TypeScript)&#10;- **Colors**: [&quot;medium-green&quot;,&quot;medium-green&quot;]&#10;- **Regex**: `/^brunch-config\.(?:[cm]?js|coffee|ts)$/i`&#10;- **Priority**: 2&#10;- **Description**: Brunch configuration files in TypeScript&#10;&#10;### 10. grunt-icon (TypeScript)&#10;- **Colors**: [&quot;medium-blue&quot;,&quot;medium-blue&quot;]&#10;- **Regex**: `/^gruntfile.*\.tsx?$/i`&#10;- **Priority**: 2&#10;- **Description**: Grunt configuration files in TypeScript&#10;&#10;### 11. gulp-icon (TypeScript)&#10;- **Colors**: [&quot;medium-blue&quot;,&quot;medium-blue&quot;]&#10;- **Regex**: `/^gulpfile.*\.tsx?$/i`&#10;- **Priority**: 2&#10;- **Description**: Gulp configuration files in TypeScript&#10;&#10;### 12. karma-icon (TypeScript)&#10;- **Colors**: [&quot;medium-cyan&quot;,&quot;medium-cyan&quot;]&#10;- **Regex**: `/^karma\.conf(?:ig)?\.[cm]?js$|^karma\.conf(?:ig)?\.ts$/i`&#10;- **Priority**: 2&#10;- **Description**: Karma test runner configuration in TypeScript&#10;&#10;## Storybook Icons (TypeScript variants)&#10;&#10;### 13. storybook-icon (TypeScript)&#10;- **Colors**: [&quot;medium-blue&quot;,&quot;medium-blue&quot;]&#10;- **Regex**: `/\.(?:story|stories)\.tsx?$/i`&#10;- **Priority**: 2&#10;- **Description**: Storybook story files in TypeScript/TSX&#10;&#10;## Styled Components Icons (TypeScript variants)&#10;&#10;### 14. nailpolish-icon (.sc.ts)&#10;- **Colors**: [&quot;medium-blue&quot;,&quot;medium-blue&quot;]&#10;- **Regex**: `/\.sc\.ts$/i`&#10;- **Priority**: 2&#10;- **Description**: Styled components in TypeScript&#10;&#10;### 15. nailpolish-icon (.sc.tsx)&#10;- **Colors**: [&quot;light-blue&quot;,&quot;light-blue&quot;]&#10;- **Regex**: `/\.sc\.tsx$/i`&#10;- **Priority**: 2&#10;- **Description**: Styled components in TypeScript React&#10;&#10;## Other Config Files&#10;&#10;### 16. snowpack-icon (TypeScript config)&#10;- **Colors**: [&quot;dark-blue&quot;,&quot;dark-blue&quot;]&#10;- **Regex**: `/^snowpack\.config\.(?:[cm]?js|ts|json)$/i`&#10;- **Priority**: 2&#10;- **Description**: Snowpack configuration in TypeScript&#10;&#10;### 17. stitches-icon (TypeScript config)&#10;- **Colors**: [&quot;medium-purple&quot;,&quot;medium-purple&quot;]&#10;- **Regex**: `/^\.?stitches\.config\.(?:[cm]?js|ts)$/i`&#10;- **Priority**: 2&#10;- **Description**: Stitches CSS-in-JS configuration in TypeScript&#10;&#10;### 18. quasar-icon (TypeScript config)&#10;- **Colors**: [&quot;medium-blue&quot;,&quot;medium-blue&quot;]&#10;- **Regex**: `/^quasar\.conf(?:ig)?\.[cm]?[jt]s$/i`&#10;- **Priority**: 2&#10;- **Description**: Quasar framework configuration in TypeScript&#10;&#10;### 19. gridsome-icon (TypeScript config)&#10;- **Colors**: [&quot;medium-cyan&quot;,&quot;medium-cyan&quot;]&#10;- **Regex**: `/\bgridsome\.(?:config|client|server)\.[jt]s$/i`&#10;- **Priority**: 2&#10;- **Description**: Gridsome configuration files in TypeScript" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>